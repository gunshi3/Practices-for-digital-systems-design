C51 COMPILER V9.51   TEMP_LIGHT                                                            08/11/2016 21:27:14 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE TEMP_LIGHT
OBJECT MODULE PLACED IN temp_light.OBJ
COMPILER INVOKED BY: F:\dan pian ji\C51\BIN\C51.EXE temp_light.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include "STC15F2K60S2.H"
   2          
   3          sbit SEL0=P2^0;     //定义引脚
   4          sbit SEL1=P2^1;
   5          sbit SEL2=P2^2;
   6          sbit SEL3=P2^3;
   7          
   8          #define uint unsigned int
   9          #define ulint unsigned long
  10          
  11          uint time=0;        //延时
  12          uint flag=1;        //标志位，区分光和温度
  13          
  14          uint l=0;           //执行光的次数
  15          uint t=0;           //执行温度的次数
  16          ulint suml=0;       //光AD值得总和
  17          ulint sumt=0;       //温度AD值的总和
  18          
  19          uint date_temp;
  20          int temp=0;         //温度值
  21          uint abs_temp;      //温度绝对值
  22          uint light=0;       //光
  23          
  24          //设置用于显示温度的三个变量
  25          uint temp_bai=0;    //百位
  26          uint temp_shi=0;    //十位
  27          uint temp_ge =0;    //个位
  28          
  29          //设置用于显示光的三个变量
  30          uint light_bai=0;   //百位
  31          uint light_shi=0;   //十位
  32          uint light_ge =0;   //个位
  33          
  34          //数码管上显示0-F
  35          char segtable[]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,
  36                           0x7f,0x6f,0x77,0x7c,0x39,0x5e,0x79,0x71};
  37          //温度值对应表
  38          int code tempdata[]={239,197,175,160,150,142,135,129,124,120,116,113,109,107,104,101, 
  39                                99, 97, 95, 93, 91, 90, 88, 86, 85, 84, 82, 81, 80, 78, 77, 76, 
  40                                75, 74, 73, 72, 71, 70, 69, 68, 67, 67, 66, 65, 64, 63, 63, 62, 
  41                                61, 61, 60, 59, 58, 58, 57, 57, 56, 55, 55, 54, 54, 53, 52, 52, 
  42                                51, 51, 50, 50, 49, 49, 48, 48, 47, 47, 46, 46, 45, 45, 44, 44, 
  43                                43, 43, 42, 42, 41, 41, 41, 40, 40, 39, 39, 38, 38, 38, 37, 37, 
  44                                36, 36, 36, 35, 35, 34, 34, 34, 33, 33, 32, 32, 32, 31, 31, 31, 
  45                                30, 30, 29, 29, 29, 28, 28, 28, 27, 27, 27, 26, 26, 26, 25, 25,
  46                                24, 24, 24, 23, 23, 23, 22, 22, 22, 21, 21, 21, 20, 20, 20, 19, 
  47                                19, 19, 18, 18, 18, 17, 17, 16, 16, 16, 15, 15, 15, 14, 14, 14, 
  48                                13, 13, 13, 12, 12, 12, 11, 11, 11, 10, 10, 9, 9, 9, 8, 8, 8, 7, 
  49                                7, 7, 6, 6,5, 5, 54,4, 3, 3,3, 2, 2, 1, 1, 1, 0, 0, -1, -1, -1, 
  50                                -2, -2, -3, -3, -4, -4, -5, -5, -6, -6, -7, -7, -8, -8, -9, -9, 
  51                                -10, -10, -11, -11, -12, -13, -13, -14, -14, -15, -16, -16, -17, 
  52                                -18, -19, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, 
  53                                -30, -32, -33, -35, -36, -38, -40, -43, -46, -50, -55, -63, 361};
  54          void Delay(int n);     //延时函数
  55          void weixuan(char i);  //数码管位的选择
C51 COMPILER V9.51   TEMP_LIGHT                                                            08/11/2016 21:27:14 PAGE 2   

  56          void SEG_Display();    //显示温度，光度
  57          void InitADC_temp();   //初始化温度ADC
  58          void InitADC_light();  //初始化光ADC
  59          void date_processtemp();
  60          void date_processlight();
  61          
  62          void Delay(int n)     //延时函数
  63          {
  64   1        int x;
  65   1        while(n--)
  66   1        {
  67   2          x=60;
  68   2          while(x--);
  69   2        }
  70   1      }
  71          
  72          void weixuan(char i)  //数码管位的选择
  73          {
  74   1        SEL2=i/4;
  75   1        SEL1=i%4/2;
  76   1        SEL0=i%2;
  77   1      }
  78          void SEG_Display()   //显示温度，光度
  79          {
  80   1        //用于设置温度的位数
  81   1        if(temp<0)
  82   1        {
  83   2          P0=0;
  84   2          weixuan(0);       //若温度为负，则首位显示‘-‘
  85   2          P0=0x40;
  86   2          Delay(10);
  87   2        }
  88   1        else
  89   1        {
  90   2          P0=0;
  91   2          weixuan(0);
  92   2          P0=segtable[temp_bai];
  93   2          Delay(10);
  94   2        }
  95   1        
  96   1        P0=0;
  97   1        weixuan(1);
  98   1        P0=segtable[temp_shi];
  99   1        Delay(10);
 100   1        
 101   1        P0=0;
 102   1        weixuan(2);
 103   1        P0=segtable[temp_ge];
 104   1        Delay(10);
 105   1      
 106   1        //用于设置光的位数
 107   1        P0=0;
 108   1        weixuan(5);
 109   1        P0=segtable[light_bai];
 110   1        Delay(10);
 111   1        
 112   1        P0=0;
 113   1        weixuan(6);
 114   1        P0=segtable[light_shi];
 115   1        Delay(10);
 116   1        
 117   1        P0=0;
C51 COMPILER V9.51   TEMP_LIGHT                                                            08/11/2016 21:27:14 PAGE 3   

 118   1        weixuan(7);
 119   1        P0=segtable[light_ge];
 120   1        Delay(10);
 121   1      }
 122          
 123          void T_L()
 124          {
 125   1        P0M1=0x00;            //设置P0为推挽模式，点亮数码管
 126   1        P0M0=0xff;
 127   1        P2M1=0x00;
 128   1        P2M0=0x08;            //将P2^3设置为推挽模式，其余为准双向口模式
 129   1        SEL3=0;               //熄灭LED灯
 130   1        
 131   1        IE=0xa8;              //EA=1打开总中断，EADC=1允许A/D转化中断，ET1=1允许T1中断  
 132   1        TMOD=0x10;            //使用定时器1，16位不可重装载模式，TH1、TL1全用
 133   1        TH1=(65535-40000)/256;//高8位赋初值，定时40000周期
 134   1        TL1=(65535-40000)%256;//低8位赋初值
 135   1        TR1=1;                //启动定时器1
 136   1        
 137   1        while(1)
 138   1        {
 139   2          SEG_Display();
 140   2        }
 141   1      }
 142          
 143          void InitADC_temp()     //初始化温度ADC
 144          {
 145   1        P1ASF=0xff;           //将P1口作为模拟功能A/D使用
 146   1        ADC_RES=0;            //寄存器ADC_RES和ADC_RESL保存A/D转化结果
 147   1        ADC_RESL=0;           //初始赋值0
 148   1        ADC_CONTR=0x8b;       //ADC_POWER=1打开A/D转换器电源;ADC_START=1启动模拟转换器ADC;CHS=011选择P1^3作为A/D输入
             -使用
 149   1        CLK_DIV=0x20;         //ADRJ=1：ADC_RES[1:0]存放高2位ADC结果，ADC_RESL[7:0]存放低8位ADC结果
 150   1      }
 151          void InitADC_light()    //初始化光ADC
 152          {
 153   1        P1ASF=0xff;
 154   1        ADC_RES=0;
 155   1        ADC_RESL=0;
 156   1        ADC_CONTR=0x8c;       //CHS=100选择P1^4作为A/D输入使用
 157   1        CLK_DIV=0x20;
 158   1      }
 159          
 160          //分别取出温度和光照的百位、十位、个位
 161          void date_processtemp()
 162          {
 163   1        if(temp<0)
 164   1          abs_temp=-temp;
 165   1        else
 166   1          abs_temp=temp;
 167   1        temp_bai=abs_temp%1000/100;
 168   1        temp_shi=abs_temp%100/10;
 169   1        temp_ge =abs_temp%10;
 170   1      }
 171          void date_processlight()
 172          {
 173   1        light_bai=light%1000/100;
 174   1        light_shi=light%100/10;
 175   1        light_ge =light%10;
 176   1      }
 177          
 178          void Timer1_Routine() interrupt 3 //3为定时器1中断编号
C51 COMPILER V9.51   TEMP_LIGHT                                                            08/11/2016 21:27:14 PAGE 4   

 179          {
 180   1        IE=0x00;              //关闭总中断
 181   1        TR1=0;                //定时器1停止
 182   1        TH1=(65535-40000)/256;//重新赋值
 183   1        TL1=(65535-40000)%256;
 184   1      
 185   1        if(flag==1)
 186   1        {
 187   2          InitADC_light();    //初始化光
 188   2        }
 189   1        else
 190   1        {
 191   2          InitADC_temp();     //初始化温度
 192   2        }
 193   1        flag=-flag;
 194   1      
 195   1        IE=0xa8;              //打开总中断
 196   1        TR1=1;                //启动定时器1
 197   1      }
 198          
 199          //AD中断
 200          void adc_isr() interrupt 5 using 1
 201          {
 202   1        time++;
 203   1        IE=0x00;              //关闭中断
 204   1        
 205   1        if(time>2000)      //取多次值求平均值减小误差
 206   1        {
 207   2          if(flag==1)                   //此时flag=1执行温度部分
 208   2          { 
 209   3            date_temp=(sumt+t/2)/t;     //四舍五入
 210   3            temp=tempdata[date_temp-1]; //查找对应的AD的温度值
 211   3            sumt=0;
 212   3            t=0;
 213   3            time=0;
 214   3            date_processtemp(); 
 215   3          }
 216   2      
 217   2          if(flag==-1)                  //此时flag=-1执行光部分
 218   2          {
 219   3            light=(suml+l/2)/l;         //四舍五入
 220   3            suml=0;
 221   3            l=0;
 222   3            time=0;
 223   3            date_processlight();
 224   3          }    
 225   2        }
 226   1      
 227   1        if(flag==1)
 228   1        {
 229   2          //对应温度的数据处理
 230   2          t++;
 231   2          date_temp=(ADC_RES*256+ADC_RESL)/4;//由10位AD值转换为8位AD值
 232   2          sumt+=date_temp;            //求t次AD值的和
 233   2      
 234   2        }
 235   1        if(flag==-1)
 236   1        {
 237   2          //处理光部分的数据
 238   2          l++;
 239   2          suml+=ADC_RES*256+ADC_RESL;//求l次AD值的和
 240   2        }
C51 COMPILER V9.51   TEMP_LIGHT                                                            08/11/2016 21:27:14 PAGE 5   

 241   1      
 242   1        ADC_CONTR&=~0X10;            //转换完成后，ADC_FLAG清零
 243   1        ADC_CONTR|=0X08;             //转换完成后，ADC_START赋1
 244   1        IE=0xa8;                     //打开中断
 245   1      }
 246          
 247          void main()
 248          {
 249   1        T_L();
 250   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    869    ----
   CONSTANT SIZE    =    508    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     52    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
