C51 COMPILER V9.51   P1_0_P1_1                                                             08/11/2015 15:22:44 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE P1_0_P1_1
OBJECT MODULE PLACED IN P1_0_P1_1.OBJ
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE P1_0_P1_1.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include "STC15F2K60S2.H"
   2          
   3          sbit SEL0=P2^0;       //定义引脚
   4          sbit SEL1=P2^1;
   5          sbit SEL2=P2^2;
   6          sbit SEL3=P2^3;
   7          
   8          #define uint unsigned int
   9          #define ulint unsigned long
  10          
  11          uint time=0;          //延时
  12          uint flag=1;          //标志位，区分P1_0和P1_1
  13          
  14          uint count_0=0;       //执行P1_0的次数
  15          uint count_1=0;       //执行P1_1的次数
  16          ulint sum_0=0;        //P1_0接口AD值得总和
  17          ulint sum_1=0;        //P1_1接口AD值得总和
  18          
  19          uint P1_0=0;          //P1_0
  20          uint P1_1=0;          //P1_1 
  21          
  22          //设置用于显示P1_0电压的三个变量(电压范围在0~5之间，显示小数点后两位)
  23          uint U0_bai=0;        //百位(电压个位整数位)
  24          uint U0_shi=0;        //十位(小数点后十分位)
  25          uint U0_ge =0;        //个位(小数点后百分位)
  26          
  27          //设置用于显示P1_1电压U1的三个变量
  28          uint U1_bai=0;        //百位
  29          uint U1_shi=0;        //十位
  30          uint U1_ge =0;        //个位
  31          
  32          //定义中间转换变量
  33          float f0=0.0,f1=0.0;
  34          int i0=0,i1=0;
  35          
  36          //数码管上显示0-F
  37          char segtable[]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,
  38                           0x7f,0x6f,0x77,0x7c,0x39,0x5e,0x79,0x71};
  39          //显示小数点的数组(0~5V)
  40          char segtabletwo[]={0xbf,0x86,0xdb,0xcf,0xe6,0xed};
  41          
  42          void Delay(int n);
  43          void weixuan(char i);
  44          void SEG_Display();
  45          void InitADC_P1_0();
  46          void InitADC_P1_1();
  47          void date_processP1_0();
  48          void date_processP1_0();
  49          
  50          void Delay(int n)     //延时函数
  51          {
  52   1        int x;
  53   1        while(n--)
  54   1        {
  55   2          x=60;
C51 COMPILER V9.51   P1_0_P1_1                                                             08/11/2015 15:22:44 PAGE 2   

  56   2          while(x--);
  57   2        }
  58   1      }
  59          
  60          void weixuan(char i)  //数码管位的选择
  61          {
  62   1        SEL2=i/4;
  63   1        SEL1=i%4/2;
  64   1        SEL0=i%2;
  65   1      }
  66          void SEG_Display()
  67          {
  68   1        //用于显示P1_0电压值
  69   1        P0=0;
  70   1        weixuan(0);
  71   1        P0=segtabletwo[U0_bai];
  72   1        Delay(10);
  73   1      
  74   1        P0=0;
  75   1        weixuan(1);
  76   1        P0=segtable[U0_shi];
  77   1        Delay(10);
  78   1        
  79   1        P0=0;
  80   1        weixuan(2);
  81   1        P0=segtable[U0_ge];
  82   1        Delay(10);
  83   1      
  84   1        //用于显示P1_1电压值
  85   1        P0=0;
  86   1        weixuan(5);
  87   1        P0=segtabletwo[U1_bai];
  88   1        Delay(10);
  89   1        
  90   1        P0=0;
  91   1        weixuan(6);
  92   1        P0=segtable[U1_shi];
  93   1        Delay(10);
  94   1        
  95   1        P0=0;
  96   1        weixuan(7);
  97   1        P0=segtable[U1_ge];
  98   1        Delay(10);
  99   1      }
 100          
 101          /**********************
 102          函数名称：void U_T()
 103          功能描述：用定时器1使得AD分时采集P1.0和P1.1口的AD值，并显示在数码管上，左侧显示P1.0，右侧显示P1.1
 104          入口参数：无
 105          出口参数：无
 106          备注：
 107          ***********************/
 108          
 109          void U0_U1()
 110          {
 111   1        P0M1=0x00;            //设置P0为推挽模式，点亮数码管
 112   1        P0M0=0xff;
 113   1        P2M1=0x00;
 114   1        P2M0=0x08;            //将P2^3设置为推挽模式，其余为准双向口模式
 115   1        SEL3=0;               //熄灭LED灯
 116   1        
 117   1        IE=0xa8;              //EA=1打开总中断，EADC=1允许A/D转化中断，ET1=1允许T1中断  
C51 COMPILER V9.51   P1_0_P1_1                                                             08/11/2015 15:22:44 PAGE 3   

 118   1        TMOD=0x10;            //使用定时器1，16位不可重装载模式，TH1、TL1全用
 119   1        TH1=(65535-40000)/256;//高8位赋初值，定时40000周期
 120   1        TL1=(65535-40000)%256;//低8位赋初值
 121   1        TR1=1;                //启动定时器1
 122   1        
 123   1        while(1)
 124   1        {
 125   2          SEG_Display();
 126   2        }
 127   1      }
 128          
 129          void InitADC_P1_0()     //初始化P1_0
 130          {
 131   1        P1ASF=0xff;           //将P1口作为模拟功能A/D使用
 132   1        ADC_RES=0;            //寄存器ADC_RES和ADC_RESL保存A/D转化结果
 133   1        ADC_RESL=0;           //初始赋值0
 134   1        ADC_CONTR=0x88;       //ADC_POWER=1打开A/D转换器电源;ADC_START=1启动模拟转换器ADC;CHS=000选择P1^0作为A/D输入
             -使用
 135   1        CLK_DIV=0x20;         //ADRJ=1：ADC_RES[1:0]存放高2位ADC结果，ADC_RESL[7:0]存放低8位ADC结果
 136   1      }
 137          void InitADC_P1_1()     //初始化P1_1
 138          {
 139   1        P1ASF=0xff;
 140   1        ADC_RES=0;
 141   1        ADC_RESL=0;
 142   1        ADC_CONTR=0x89;       //CHS=001选择P1^1作为A/D输入使用
 143   1        CLK_DIV=0x20;
 144   1      }
 145          
 146          //分别取出U0和U1的电压值(保留两位小数)
 147          void date_processP1_0()
 148          {
 149   1            i0=f0;
 150   1            U0_bai=i0;
 151   1      
 152   1            i0=f0*10;
 153   1            U0_shi=i0%10;
 154   1      
 155   1            i0=f0*100;
 156   1            U0_ge=i0%10;
 157   1      }
 158          void date_processP1_1()
 159          {
 160   1            i1=f1;
 161   1            U1_bai=i1;
 162   1      
 163   1            i1=f1*10;
 164   1            U1_shi=i1%10;
 165   1      
 166   1            i1=f1*100;
 167   1            U1_ge=i1%10;
 168   1      }
 169          
 170          void Timer1_Routine() interrupt 3 //3为定时器1中断编号
 171          {
 172   1        IE=0x00;              //关闭总中断
 173   1        TR1=0;                //定时器1停止
 174   1        TH1=(65535-40000)/256;//重新赋值
 175   1        TL1=(65535-40000)%256;
 176   1      
 177   1        if(flag==1)
 178   1        {
C51 COMPILER V9.51   P1_0_P1_1                                                             08/11/2015 15:22:44 PAGE 4   

 179   2          InitADC_P1_1();     //初始化P1_1
 180   2        }
 181   1        else
 182   1        {
 183   2          InitADC_P1_0();     //初始化P1_0
 184   2        }
 185   1        flag=-flag;
 186   1      
 187   1        IE=0xa8;              //打开总中断
 188   1        TR1=1;                //启动定时器1
 189   1      }
 190          
 191          //AD中断
 192          void adc_isr() interrupt 5 using 1
 193          {
 194   1        time++;
 195   1        IE=0x00;              //关闭中断
 196   1        
 197   1        if(time>2000)
 198   1        {
 199   2          if(flag==1)                        //此时flag=1执行温度部分
 200   2          { 
 201   3            P1_0=(sum_0+count_0/2)/count_0;  //四舍五入
 202   3            f0=(5*P1_0)/1024.0;              //转换成电压
 203   3            sum_0=0;
 204   3            count_0=0;
 205   3            time=0;
 206   3            date_processP1_0(); 
 207   3          }
 208   2      
 209   2      
 210   2          if(flag==-1)                        //此时flag=-1执行光部分
 211   2          {
 212   3            P1_1=(sum_1+count_1/2)/count_1;   //四舍五入
 213   3            f1=(5*P1_1)/1024.0;               //转换成电压
 214   3            sum_1=0;
 215   3            count_1=0;
 216   3            time=0;
 217   3            date_processP1_1();
 218   3          }    
 219   2        }
 220   1      
 221   1        if(flag==1)
 222   1        {
 223   2          //对应P1_0处理
 224   2          count_0++;
 225   2          sum_0+=ADC_RES*256+ADC_RESL;          //求count_0次AD值的和
 226   2      
 227   2        }
 228   1        if(flag==-1)
 229   1        {
 230   2          //对应P1_1处理
 231   2          count_1++;
 232   2          sum_1+=ADC_RES*256+ADC_RESL;          //求count_1次AD值的和
 233   2        }
 234   1      
 235   1        ADC_CONTR&=~0X10;            //转换完成后，ADC_FLAG清零
 236   1        ADC_CONTR|=0X08;             //转换完成后，ADC_START赋1
 237   1        IE=0xa8;                     //打开中断
 238   1      }
 239          
 240          void main()
C51 COMPILER V9.51   P1_0_P1_1                                                             08/11/2015 15:22:44 PAGE 5   

 241          {
 242   1        U0_U1();
 243   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    883    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     66    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
