C51 COMPILER V9.51   BEEP                                                                  04/24/2019 09:37:21 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE BEEP
OBJECT MODULE PLACED IN beep.OBJ
COMPILER INVOKED BY: d:\Keil\C51\BIN\C51.EXE beep.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          /**********************
   2          文件名称：beep.c
   3          作者：徐梓桑
   4          说明：进行音乐播放的例程,按下key1键后开始播放音乐
   5          修改记录：
   6          ***********************/
   7          
   8          /**********************
   9          基于STC15F2K60S2系列单片机C语言编程实现
  10          使用如下头文件，不用另外再包含"REG51.H"
  11          ***********************/
  12          #include <STC15F2K60S2.h>
  13          #define uint unsigned int
  14          #define uchar unsigned char
  15          sbit beep=P3^4;       //蜂鸣器
  16          uchar timeh,timel;      //定义定时器的重装值
  17          uchar code music[] ={    //音乐代码，歌曲为《同一首歌》，格式为: 音符, 节拍, 音符, 节拍,    
  18          0x15,0x20,0x21,0x10,   //音符的十位代表是低八度，中八度还是高八度，1代表低八度，2代表中八度，3代表高八度
  19          0x22,0x10,0x23,0x18,   //个位代表简谱的音符，例如0x15代表低八度的S0，0x21代表中八度的DO。
  20          0x24,0x08,0x23,0x10,   //节拍则是代表音长，例如：0x10代表一拍，0x20代表两拍，0x08代表1/2拍
  21          0x21,0x10,0x22,0x20,
  22          0x21,0x10,0x16,0x10,
  23          0x21,0x40,0x15,0x20,
  24          0x21,0x10,0x22,0x10,
  25          0x23,0x10,0x23,0x08,
  26          0x24,0x08,0x25,0x10,
  27          0x21,0x10,0x24,0x18,
  28          0x23,0x08,0x25,0x10,
  29          0x22,0x08,0x23,0x08,
  30          0x23,0x08,0x22,0x08,
  31          0x22,0x30,0x23,0x20,
  32          0x25,0x10,0x31,0x10,
  33          0x27,0x18,0x26,0x08,
  34          0x26,0x20,0x25,0x10,
  35          0x25,0x08,0x26,0x08,
  36          0x27,0x10,0x26,0x08,
  37          0x25,0x08,0x23,0x40,
  38          0x24,0x18,0x24,0x08,
  39          0x25,0x10,0x26,0x10,
  40          0x25,0x10,0x24,0x08,
  41          0x23,0x08,0x22,0x20,
  42          0x17,0x10,0x17,0x08,
  43          0x16,0x08,0x15,0x10,
  44          0x16,0x10,0x21,0x40,
  45          0x00,0x00
  46          };
  47          uchar code quzi[] ={    //此数组数据为各个音符在定时器中的重装值，第一列是高位，第二列是低位
  48          0xf8,0x8c,    //低八度，低1
  49          0xf9,0x5b,    
  50          0xfa,0x15,    //低3
  51          0xfa,0x67,
  52          0xfb,0x04,    //低5
  53          0xfb,0x90,
  54          0xfc,0x0c,    //低7 
  55          0xfc,0x44,    //中央C调
C51 COMPILER V9.51   BEEP                                                                  04/24/2019 09:37:21 PAGE 2   

  56          0xfc,0xac,    //中2
  57          0xfd,0x09,
  58          0xfd,0x34,    //中4
  59          0xfd,0x82,
  60          0xfd,0xc8,    //中6
  61          0xfe,0x06,
  62          0xfe,0x22,    //高八度，高1 
  63          0xfe,0x56,
  64          0xfe,0x6e,    //高3
  65          0xfe,0x9a,
  66          0xfe,0xc1,    //高5
  67          0xfe,0xe4,
  68          0xff,0x03   //高7
  69          };
  70          /**********************
  71          函数名称：void delay(unsigned int xms)
  72          功能描述：延时
  73          入口参数：xms：输入需要延时的毫秒值
  74          出口参数：无
  75          备注：
  76          
  77          ***********************/
  78          void delay(unsigned int xms)
  79          {
  80   1        uint i,j;              
  81   1         for(i=xms;i>0;i--)
  82   1          for(j=124;j>0;j--);
  83   1      }
  84          /**********************
  85          函数名称：uchar quyin(uchar tem)
  86          功能描述：在quzi数组中，找到music数组定义的简谱音符的重装值，并返回其在quzi数组中的位置
  87          入口参数：tem：music数组中定义的简谱音符
  88          出口参数：返回的是tem音符在quzi数组中的位置值
  89          备注：
  90          
  91          ***********************/
  92          uchar quyin(uchar tem)
  93          {
  94   1        uchar qudiao,jp,weizhi;     //定义曲调，音符和位置
  95   1        qudiao=tem/16;          //高4位是曲调值
  96   1        jp=tem%16;            //低4位是音符
  97   1        if(qudiao==1)         //当曲调值为1时，即是低八度，低八度在quzi数组中基址为0
  98   1          qudiao=0;
  99   1        else if(qudiao==2)        //当曲调值为2时，即是中八度，中八度在quzi数组中基址为14
 100   1          qudiao=14;
 101   1        else if(qudiao==3)        //当曲调值为3时，即是高八度，高八度在quzi数组中，基址为28
 102   1          qudiao=28;
 103   1        weizhi=qudiao+(jp-1)*2;     //通过基址加上音符作为偏移量，即可定位此音符在quzi数组中的位置
 104   1        return weizhi;          //返回这一个位置值
 105   1      }
 106          /**********************
 107          函数名称：void playmusic()
 108          功能描述：播放音乐
 109          入口参数：无
 110          出口参数：无
 111          备注：
 112          
 113          ***********************/
 114          void playmusic()
 115          {
 116   1        uchar p,m,tem;   //m为节拍   
 117   1        uint i=0;    
C51 COMPILER V9.51   BEEP                                                                  04/24/2019 09:37:21 PAGE 3   

 118   1        while(1)   
 119   1        {   
 120   2          p=music[i];      //如果碰到结束符,延时1秒,回到开始再来一遍 
 121   2          if(p==0x00)
 122   2          {
 123   3            i=0;
 124   3            delay(1000);
 125   3          }        
 126   2          else if(p==0xff)   //若碰到休止符,延时100ms,继续取下一音符
 127   2          {
 128   3            i=i+2;
 129   3            delay(100);
 130   3            TR0=0;       //关定时器1
 131   3          }      
 132   2          else         //正常情况下取音符和节拍 
 133   2          {
 134   3            tem=quyin(music[i]);    //取出当前音符在quzi数组中的位置值
 135   3            timeh=quzi[tem];      //把音符相应的计时器重装载值赋予timeh和timel
 136   3            timel=quzi[tem+1];
 137   3            i++;
 138   3            TH0=timeh;          //把timeh和timel赋予计时器
 139   3            TL0=timel;
 140   3            m=music[i];          //取得节拍
 141   3            i++;
 142   3            TR0=1;                    //开定时器1    
 143   3            delay(m*180);           //等待节拍完成, 通过P3^4口输出音频    
 144   3            TR0=0;                    //关定时器1 
 145   3          } 
 146   2         }
 147   1      }
 148          /**********************
 149          函数名称：void init_sys()
 150          功能描述：系统初始化，功能是配置IO口
 151          入口参数：无
 152          出口参数：无
 153          备注：
 154          
 155          ***********************/
 156          void init_sys()
 157          {
 158   1        P0M0=0xff;
 159   1        P0M1=0x00;
 160   1        P2M0=0x08;
 161   1        P2M1=0x00;
 162   1        P3M0=0x10;
 163   1        P3M1=0x00;
 164   1        P4M0=0x00;
 165   1        P4M1=0x00;
 166   1        P5M0=0x00;
 167   1        P5M1=0x00;
 168   1      }
 169          /**********************
 170          函数名称：void init()
 171          功能描述：定时器的初始化
 172          入口参数：无
 173          出口参数：无
 174          备注：
 175          
 176          ***********************/
 177          void init()             
 178          {
 179   1        TMOD=0x01;
C51 COMPILER V9.51   BEEP                                                                  04/24/2019 09:37:21 PAGE 4   

 180   1        TH0=0xD8;
 181   1        TL0=0xEF;
 182   1        EA=1;
 183   1        ET0=1;
 184   1        TR0=0;
 185   1      }
 186          void main()
 187          {
 188   1        init_sys();
 189   1        init();
 190   1        P0=0x00;
 191   1        delay(1000);
 192   1        playmusic();
 193   1        while(1);
 194   1      }
 195          /**********************
 196          函数名称：void tim1() interrupt 1
 197          功能描述：定时器0中断处理，重新装值，并把beep值取反，产生方波
 198          入口参数：无
 199          出口参数：无
 200          备注：
 201          
 202          ***********************/
 203          void tim1() interrupt 1           //计时器控制频率
 204          {
 205   1        TH0=timeh;
 206   1        TL0=timel;
 207   1        beep=~beep;
 208   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    264    ----
   CONSTANT SIZE    =    152    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
