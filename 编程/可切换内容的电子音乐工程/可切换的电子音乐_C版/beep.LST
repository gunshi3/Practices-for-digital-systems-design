C51 COMPILER V9.00   BEEP                                                                  08/15/2015 09:58:00 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE BEEP
OBJECT MODULE PLACED IN beep.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE beep.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /**********************
   2          文件名称：beep.c
   3          作者：徐梓桑
   4          说明：进行音乐播放的例程,按下key1键后开始播放音乐
   5          修改记录：
   6          ***********************/
   7          
   8          /**********************
   9          基于STC15F2K60S2系列单片机C语言编程实现
  10          使用如下头文件，不用另外再包含"REG51.H"
  11          ***********************/
  12          #include <STC15F2K60S2.h>
  13          #define uint unsigned int
  14          #define uchar unsigned char
  15          sbit beep=P3^4;                   //蜂鸣器
  16          sbit key1=P3^2;                 //按键1
  17          sbit key2=P3^3;                 //按键2
  18          uchar timeh,timel,jindu=0,gequ=0;                 //定义定时器的重装值
  19          bit flag;       //播放标志位
  20          uchar code music1[] ={    //音乐代码，歌曲为《同一首歌》，格式为: 音符, 节拍, 音符, 节拍,    
  21          0x15,0x20,0x21,0x10,     //音符的十位代表是低八度，中八度还是高八度，1代表低八度，2代表中八度，3代表高八度
  22          0x22,0x10,0x23,0x15,     //个位代表简谱的音符，例如0x15代表低八度的S0，0x21代表中八度的DO。
  23          0x24,0x05,0x23,0x10,     //节拍则是代表音长，例如：0x10代表一拍，0x20代表两拍，0x05代表1/2拍
  24          0x21,0x10,0x22,0x20,
  25          0x21,0x10,0x16,0x10,
  26          0x21,0x40,0x15,0x20,
  27          0x21,0x10,0x22,0x10,
  28          0x23,0x10,0x23,0x05,
  29          0x24,0x05,0x25,0x10,
  30          0x21,0x10,0x24,0x15,
  31          0x23,0x05,0x25,0x10,
  32          0x22,0x05,0x23,0x05,
  33          0x23,0x05,0x22,0x05,
  34          0x22,0x30,0x23,0x20,
  35          0x25,0x10,0x31,0x10,
  36          0x27,0x15,0x26,0x05,
  37          0x26,0x20,0x25,0x10,
  38          0x25,0x05,0x26,0x05,
  39          0x27,0x10,0x26,0x05,
  40          0x25,0x05,0x23,0x40,
  41          0x24,0x15,0x24,0x05,
  42          0x25,0x10,0x26,0x10,
  43          0x25,0x10,0x24,0x05,
  44          0x23,0x05,0x22,0x20,
  45          0x17,0x10,0x17,0x05,
  46          0x16,0x05,0x15,0x10,
  47          0x16,0x10,0x21,0x40,
  48          0x00,0x00
  49          };
  50          uchar code music2[] ={                     //歌曲为小毛驴
  51          0x21,0x05,0x21,0x05,
  52          0x21,0x05,0x23,0x05,
  53          0x25,0x05,0x25,0x05,
  54          0x25,0x05,0x25,0x05,
  55          0x26,0x05,0x26,0x05,
C51 COMPILER V9.00   BEEP                                                                  08/15/2015 09:58:00 PAGE 2   

  56          0x26,0x05,0x31,0x05,
  57          0x25,0x20,0x24,0x05,
  58          0x24,0x05,0x24,0x05,
  59          0x26,0x05,0x23,0x05,
  60          0x23,0x05,0x23,0x05,
  61          0x23,0x05,0x22,0x05,
  62          0x22,0x05,0x22,0x05,
  63          0x22,0x05,0x25,0x15,
  64          0x25,0x05,0x21,0x05,
  65          0x21,0x05,0x21,0x05,
  66          0x23,0x05,0x25,0x05,
  67          0x25,0x05,0x25,0x05,
  68          0x25,0x05,0x26,0x05,
  69          0x26,0x05,0x26,0x05,
  70          0x31,0x05,0x25,0x20,
  71          0x24,0x05,0x24,0x05,
  72          0x24,0x05,0x26,0x05,
  73          0x21,0x05,0x21,0x05,
  74          0x21,0x05,0x23,0x05,
  75          0x25,0x05,0x25,0x05,
  76          0x25,0x05,0x25,0x05,
  77          0x26,0x05,0x26,0x05,
  78          0x26,0x05,0x31,0x05,
  79          0x25,0x20,0x24,0x05,
  80          0x24,0x05,0x24,0x05,
  81          0x23,0x03,0x23,0x03,
  82          0x23,0x03,0x23,0x03,
  83          0x23,0x05,0x23,0x05,
  84          0x22,0x05,0x22,0x05,
  85          0x22,0x05,0x23,0x05,
  86          0x21,0x20,0x00,0x00
  87          };
  88          uchar code music3[] ={                     //歌曲为天空之城
  89          0x16,0x05,0x17,0x05,
  90          0x21,0x15,0x17,0x05,
  91          0x21,0x10,0x23,0x10,
  92          0x17,0x30,0x23,0x10,
  93          0x16,0x15,0x15,0x05,
  94          0x16,0x10,0x21,0x10,
  95          0x15,0x30,0x13,0x10,
  96          0x14,0x15,0x13,0x05,
  97          0x14,0x05,0x21,0x05,
  98          0x21,0x10,0x13,0x30,
  99          0x21,0x10,0x17,0x10,
 100          0x14,0x05,0x14,0x10,
 101          0x17,0x10,0x17,0x20,
 102          0xff,
 103          0x16,0x05,0x17,0x05,
 104          0x21,0x15,0x17,0x05,
 105          0x21,0x10,0x23,0x10,
 106          0x17,0x30,0x13,0x05,
 107          0x13,0x05,0x16,0x15,
 108          0x15,0x05,0x16,0x10,
 109          0x21,0x10,0x15,0x30,
 110          0x13,0x10,0x14,0x10,
 111          0x21,0x05,0x17,0x05,
 112          0x17,0x10,0x21,0x10,
 113          0x22,0x10,0x23,0x05,
 114          0x21,0x20,0xff,
 115          0x21,0x05,0x17,0x05,
 116          0x16,0x10,0x17,0x10,
 117          0x15,0x10,0x16,0x20,
C51 COMPILER V9.00   BEEP                                                                  08/15/2015 09:58:00 PAGE 3   

 118          0xff,
 119          0x21,0x05,0x22,0x05,
 120          0x23,0x15,0x22,0x10,
 121          0x23,0x10,0x24,0x10,
 122          0x25,0x05,0x22,0x30,
 123          0x15,0x10,0x22,0x03,
 124          0x21,0x03,0x17,0x03,
 125          0x21,0x03,0x21,0x10,
 126          0x21,0x05,0x22,0x10,
 127          0x23,0x05,0x23,0x40,
 128          0x16,0x05,0x17,0x05,
 129          0x21,0x10,0x17,0x05,
 130          0x21,0x05,0x22,0x10,
 131          0x21,0x15,0x15,0x05,
 132          0x15,0x20,0x24,0x10,
 133          0x23,0x10,0x22,0x10,
 134          0x21,0x10,0x23,0x30,
 135          0x16,0x05,0x17,0x05,
 136          0x21,0x15,0x17,0x05,
 137          0x21,0x10,0x23,0x10,
 138          0x17,0x30,0x13,0x10,
 139          0x16,0x15,0x15,0x05,
 140          0x16,0x10,0x21,0x10,
 141          0x15,0x30,0x13,0x10,
 142          0x14,0x10,0x21,0x05,
 143          0x17,0x05,0x17,0x10,
 144          0x21,0x10,0x22,0x10,
 145          0x23,0x05,0x21,0x05,
 146          0x21,0x20,0x21,0x05,
 147          0x17,0x05,0x16,0x10,
 148          0x17,0x10,0x15,0x10,
 149          0x16,0x40,0x00,0x00
 150          };
 151          uchar code quzi[] ={      //此数组数据为各个音符在定时器中的重装值，第一列是高位，第二列是低位  //时间
 152          0xf8,0x8c,        //低八度，低1
 153          0xf9,0x5b,        
 154          0xfa,0x15,        //低3
 155          0xfa,0x67,
 156          0xfb,0x04,        //低5
 157          0xfb,0x90,
 158          0xfc,0x0c,        //低7 
 159          0xfc,0x44,        //中央C调
 160          0xfc,0xac,        //中2
 161          0xfd,0x09,
 162          0xfd,0x34,        //中4
 163          0xfd,0x82,
 164          0xfd,0xc8,        //中6
 165          0xfe,0x06,
 166          0xfe,0x22,        //高八度，高1 
 167          0xfe,0x56,
 168          0xfe,0x6e,        //高3
 169          0xfe,0x9a,
 170          0xfe,0xc1,        //高5
 171          0xfe,0xe4,
 172          0xff,0x03         //高7
 173          };
 174          /**********************
 175          函数名称：void delay(unsigned int xms)
 176          功能描述：延时
 177          入口参数：xms：输入需要延时的毫秒值
 178          出口参数：无
 179          备注：
C51 COMPILER V9.00   BEEP                                                                  08/15/2015 09:58:00 PAGE 4   

 180          
 181          ***********************/
 182          void delay(unsigned int xms)
 183          {
 184   1              uint i,j;                                                  
 185   1               for(i=xms;i>0;i--)
 186   1                      for(j=124;j>0;j--);
 187   1      }
 188          /**********************
 189          函数名称：uchar quyin(uchar tem)
 190          功能描述：在quzi数组中，找到music数组定义的简谱音符的重装值，并返回其在quzi数组中的位置
 191          入口参数：tem：music数组中定义的简谱音符
 192          出口参数：返回的是tem音符在quzi数组中的位置值
 193          备注：
 194          
 195          ***********************/
 196          uchar quyin(uchar tem)
 197          {
 198   1              uchar qudiao,jp,weizhi;           //定义曲调，音符和位置
 199   1              qudiao=tem/16;                            //高4位是曲调值
 200   1              jp=tem%16;                                        //低4位是音符
 201   1              if(qudiao==1)                             //当曲调值为1时，即是低八度，低八度在quzi数组中基址为0
 202   1                      qudiao=0;
 203   1              else if(qudiao==2)                        //当曲调值为2时，即是中八度，中八度在quzi数组中基址为14
 204   1                      qudiao=14;
 205   1              else if(qudiao==3)                        //当曲调值为3时，即是高八度，高八度在quzi数组中，基址为28
 206   1                      qudiao=28;
 207   1              weizhi=qudiao+(jp-1)*2;           //通过基址加上音符作为偏移量，即可定位此音符在quzi数组中的位置
 208   1              return weizhi;                            //返回这一个位置值
 209   1      }
 210          /**********************
 211          函数名称：void playmusic()
 212          功能描述：播放音乐
 213          入口参数：无
 214          出口参数：无
 215          备注：
 216          
 217          ***********************/
 218          void playmusic()
 219          {
 220   1              uchar p,m,tem;   //m为节拍      
 221   1              while(1)   
 222   1              {   
 223   2                      if(flag==1)                                       //若播放的标志位为1则播放音乐
 224   2                      {
 225   3                              if(gequ==0)                               //歌曲选择位为0，则播放同一首歌
 226   3                              {       
 227   4                                      p=music1[jindu];          
 228   4                                      if(p==0x00)                       //如果碰到结束符,延时1秒,回到开始再来一遍
 229   4                                      {
 230   5                                              jindu=0;
 231   5                                              delay(1000);
 232   5                                              break;
 233   5                                      }        
 234   4                                      else if(p==0xff)          //若碰到休止符,延时100ms,继续取下一音符
 235   4                                      {
 236   5                                              jindu=jindu+1;
 237   5                                              delay(100);
 238   5                                              TR0=0;
 239   5                                              break;
 240   5                                      }      
 241   4                                      else                               //正常情况下取音符和节拍 
C51 COMPILER V9.00   BEEP                                                                  08/15/2015 09:58:00 PAGE 5   

 242   4                                      {
 243   5                                              tem=quyin(music1[jindu]);               //取出当前音符在quzi数组中的位置值
 244   5                                              timeh=quzi[tem];                                //把音符相应的计时器重装载值赋予timeh和timel
 245   5                                              timel=quzi[tem+1];
 246   5                                              jindu++;
 247   5                                              TH0=timeh;                                              //把timeh和timel赋予计时器
 248   5                                              TL0=timel;
 249   5                                              m=music1[jindu];                                         //取得节拍
 250   5                                              jindu++;
 251   5                                      }                  
 252   4                              TR0=1;                            //开定时器1    
 253   4                                      delay(m*180);                                     //等待节拍完成, 通过P3^4口输出音频    
 254   4                                      TR0=0;                            //关定时器1
 255   4                                      beep=0;                                                   //使beep端口置0，起保护蜂鸣器作用
 256   4                              }                                                                               
 257   3                              else if(gequ==1)                   //歌曲选择位为1，则播放小毛驴
 258   3                              {       
 259   4                                      p=music2[jindu];         
 260   4                                      if(p==0x00)                      //如果碰到结束符,延时1秒,回到开始再来一遍 
 261   4                                      {
 262   5                                              jindu=0;
 263   5                                              delay(1000);
 264   5                                              break;
 265   5                                      }        
 266   4                                      else if(p==0xff)   //若碰到休止符,延时100ms,继续取下一音符
 267   4                                      {
 268   5                                              jindu=jindu+1;
 269   5                                              delay(100);
 270   5                                              TR0=0;
 271   5                                              break;
 272   5                                      }      
 273   4                                      else                       //正常情况下取音符和节拍 
 274   4                                      {
 275   5                                              tem=quyin(music2[jindu]);               //取出当前音符在quzi数组中的位置值
 276   5                                              timeh=quzi[tem];                        //把音符相应的计时器重装载值赋予timeh和timel
 277   5                                              timel=quzi[tem+1];
 278   5                                              jindu++;
 279   5                                              TH0=timeh;                                      //把timeh和timel赋予计时器
 280   5                                              TL0=timel;
 281   5                                              m=music2[jindu];                                         //取得节拍
 282   5                                              jindu++;
 283   5                                      }                  
 284   4                              TR0=1;                    //开定时器1    
 285   4                                      delay(m*300);             //等待节拍完成, 通过P3^4口输出音频    
 286   4                                      TR0=0;                    //关定时器1
 287   4                                      beep=0;                                   //使beep端口置0，起保护蜂鸣器作用
 288   4                              }
 289   3                              else if(gequ==2)                  //歌曲选择位为2，则播放天空之城
 290   3                              {       
 291   4                                      p=music3[jindu];         
 292   4                                      if(p==0x00)                      //如果碰到结束符,延时1秒,回到开始再来一遍 
 293   4                                      {
 294   5                                              jindu=0;
 295   5                                              delay(1000);
 296   5                                              break;
 297   5                                      }        
 298   4                                      else if(p==0xff)   //若碰到休止符,延时100ms,继续取下一音符
 299   4                                      {
 300   5                                              jindu=jindu+1;
 301   5                                              delay(100);
 302   5                                              TR0=0;
 303   5                                              break;
C51 COMPILER V9.00   BEEP                                                                  08/15/2015 09:58:00 PAGE 6   

 304   5                                      }      
 305   4                                      else                       //正常情况下取音符和节拍 
 306   4                                      {
 307   5                                              tem=quyin(music3[jindu]);               //取出当前音符在quzi数组中的位置值
 308   5                                              timeh=quzi[tem];                        //把音符相应的计时器重装载值赋予timeh和timel
 309   5                                              timel=quzi[tem+1];
 310   5                                              jindu++;
 311   5                                              TH0=timeh;                                      //把timeh和timel赋予计时器
 312   5                                              TL0=timel;
 313   5                                              m=music3[jindu];                                         //取得节拍
 314   5                                              jindu++;
 315   5                                      }                  
 316   4                              TR0=1;                    //开定时器1    
 317   4                                      delay(m*200);             //等待节拍完成, 通过P3^4口输出音频    
 318   4                                      TR0=0;                    //关定时器1
 319   4                                      beep=0;                                   //使beep端口置0，起保护蜂鸣器作用
 320   4                              }
 321   3                      }
 322   2                      else                                                       //播放标志位不为1时，暂停播放音乐
 323   2                      while(flag!=1);    
 324   2              }
 325   1      }
 326          /**********************
 327          函数名称：void init_sys()
 328          功能描述：系统初始化，功能是配置IO口
 329          入口参数：无
 330          出口参数：无
 331          备注：
 332          
 333          ***********************/
 334          void init_sys()
 335          {
 336   1              P0M0=0xff;                         //设置推挽模式
 337   1              P0M1=0x00;
 338   1              P2M0=0x08;
 339   1              P2M1=0x00;
 340   1              P3M0=0x10;
 341   1              P3M1=0x00;
 342   1              P4M0=0x00;
 343   1              P4M1=0x00;
 344   1              P5M0=0x00;
 345   1              P5M1=0x00;
 346   1      }
 347          /**********************
 348          函数名称：void init()
 349          功能描述：定时器和外部中断的初始化
 350          入口参数：无
 351          出口参数：无
 352          备注：
 353          
 354          ***********************/
 355          void init()                                               
 356          {
 357   1              TMOD=0x01;                        //设置定时器0，定时方式1，16位手动重装模式
 358   1              TH0=0xD8;                         //设置定时初值
 359   1              TL0=0xEF;
 360   1              IE=0x87;                          // 1000 0111  EA=1,EX0=1,ET0=1,EX1=0;
 361   1              IP=0x02;                          // 0000 0010  PT0=1;   定时器0优先级高
 362   1              TR0=0;                            //定时器0开始运行
 363   1              beep=0;                           //使beep端口置0，起保护蜂鸣器作用
 364   1      }
 365          void main()
C51 COMPILER V9.00   BEEP                                                                  08/15/2015 09:58:00 PAGE 7   

 366          {
 367   1              init_sys();                       //系统初始化
 368   1              init();
 369   1              P0=0x00;
 370   1              key1=1;                         //两个按键设为输入状态，检测中断
 371   1              key2=1;
 372   1              flag=0;                         //播放标志位清零
 373   1              while(1)
 374   1              {
 375   2                      playmusic();    //播放音乐函数
 376   2              }
 377   1      }                                                                       
 378          /**********************
 379          函数名称：void tim1() interrupt 1
 380          功能描述：定时器0中断处理，重新装值，并把beep值取反，产生方波
 381          入口参数：无
 382          出口参数：无
 383          备注：
 384          
 385          ***********************/
 386          void tim1() interrupt 1                                         //计时器控制频率
 387          {
 388   1              TH0=timeh;                                                              //赋初值
 389   1              TL0=timel;
 390   1              beep=~beep;                                                        //中断使得beep翻转产生方波
 391   1      }
 392          /**********************
 393          函数名称：void ex1() interrupt 0
 394          功能描述：按下按键1的外部中断，对标志位取反，功能是暂停和播放音乐
 395          入口参数：无
 396          出口参数：无
 397          备注：
 398          
 399          ***********************/
 400          void ex1() interrupt 0                                    
 401          {
 402   1              delay(5);
 403   1              if(key1==0)                                                      //判断key1是否按下        
 404   1              {
 405   2                      delay(5);
 406   2                      if(key1==0)
 407   2                      {
 408   3                              while(!key1);
 409   3                              flag=~flag;                                                      //播放中断位取反，播放或者暂停
 410   3                      }
 411   2              }
 412   1      }
 413          /**********************
 414          函数名称：void ex2() interrupt 2
 415          功能描述：按下按键2的外部中断，作用为切换歌曲
 416          入口参数：无
 417          出口参数：无
 418          备注：
 419          
 420          ***********************/
 421          void ex2() interrupt 2
 422          {
 423   1              delay(5);
 424   1              if(key2==0)                                 //按键key2按下，切换歌曲
 425   1              {
 426   2                      jindu=0;                           //歌曲的进度清零，从头开始演唱
 427   2                      gequ++;                            //下一曲
C51 COMPILER V9.00   BEEP                                                                  08/15/2015 09:58:00 PAGE 8   

 428   2                      if(gequ==3)                        //到达最后一首调到第一首
 429   2                      gequ=0;
 430   2              }
 431   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    498    ----
   CONSTANT SIZE    =    533    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
