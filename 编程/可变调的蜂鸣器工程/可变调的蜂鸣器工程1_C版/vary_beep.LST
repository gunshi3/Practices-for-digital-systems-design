C51 COMPILER V9.51   VARY_BEEP                                                             04/24/2019 09:27:17 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE VARY_BEEP
OBJECT MODULE PLACED IN vary_beep.OBJ
COMPILER INVOKED BY: d:\Keil\C51\BIN\C51.EXE vary_beep.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          /**********************
   2          myBeep2 可变调蜂的鸣器
   3          型号:STC15F2K60S2 主频:11.0592MHz
   4          ************************/
   5          #include <STC15F2K60S2.H>
   6          #define uint  unsigned int
   7          #define uchar unsigned char
   8          
   9          /*---------引脚别名定义---------*/
  10          sbit sbtBeep = P3 ^ 4;                  //蜂鸣器引脚
  11          sbit sbtKey1 = P3 ^ 2;                  //按键1引脚
  12          sbit sbtKey2 = P3 ^ 3;                  //按键2引脚
  13          sbit sbtSel0 = P2 ^ 0;                  //位选信号位
  14          sbit sbtSel1 = P2 ^ 1;                  //位选信号位
  15          sbit sbtSel2 = P2 ^ 2;                  //位选信号位
  16          sbit sbtSel3 = P2 ^ 3;                  //LED与数码管显示的控制位
  17          
  18          /*---------变量定义---------*/
  19          uint sbtKey1_state = 0;         //0：Key1未按下         1：Key1已按下
  20          uint sbtKey2_state = 0;         //0：Key2未按下         1：Key1已按下
  21          bit  btBeepFlag;                //控制蜂鸣器开关的标志位
  22          uint uiToneNum = 0;             //音调
  23          uchar arrSegSelect[] = {0x3f, 0x06, 0x5b, 0x4f, 0x66, 0x6d, 0x7d, 0x07,
  24                               0x7f, 0x6f, 0x77, 0x7c, 0x39, 0x5e, 0x79, 0x71
  25                                 }; //段选0-f
  26          
  27          /*---------初始化函数--------*/
  28          void Init()
  29          {
  30   1          P0M0 = 0xff;
  31   1          P0M1 = 0x00;
  32   1          P2M0 = 0x08;
  33   1          P2M1 = 0x00;
  34   1          //设置P3^4为推挽模式
  35   1          P3M1 = 0x00;
  36   1          P3M0 = 0x10;
  37   1      
  38   1          AUXR |= 0x80;                       //定时器时钟1T模式
  39   1          TMOD &= 0xF0;                       //设置定时器模式为16位自动重装
  40   1          TL0 = 0xCD;                         //设置定时初值
  41   1          TH0 = 0xF4;                         //设置定时初值
  42   1          TF0 = 0;                            //清除TF0标志
  43   1          TR0 = 1;                            //定时器0开始计时
  44   1      
  45   1          btBeepFlag = 0;
  46   1          P0 = 0x00;                          //数码管和LED显示清零
  47   1      
  48   1          sbtSel0 = 1;                         //位选设置为第七位
  49   1          sbtSel1 = 1;
  50   1          sbtSel2 = 1;
  51   1      
  52   1          sbtBeep = 0;                        //蜂鸣器引脚置0，以保护蜂鸣器
  53   1          ET0 = 1;
  54   1          EA = 1;
  55   1      }
C51 COMPILER V9.51   VARY_BEEP                                                             04/24/2019 09:27:17 PAGE 2   

  56          
  57          /*---------延时子函数--------*/
  58          void DelayMs( uint xms )
  59          {
  60   1          uchar i;
  61   1          for( ; xms > 0; xms-- )
  62   1              for( i = 114; i > 0; i-- )
  63   1              {
  64   2                  ;
  65   2              }
  66   1      }
  67          
  68          /*---------显示子函数--------*/
  69          void DisplaySeg7Led()
  70          {
  71   1          P0 = 0;
  72   1          sbtSel3 = 0;
  73   1          P0 = arrSegSelect[uiToneNum];
  74   1          DelayMs( 1 );
  75   1      
  76   1          P0 = 0;
  77   1          sbtSel3 = 1;
  78   1          P0 = 0x08;
  79   1          DelayMs( 1 );
  80   1      }
  81          
  82          /*---------主函数--------*/
  83          void main()
  84          {
  85   1          Init();
  86   1          while( 1 )
  87   1          {
  88   2              if( sbtKey1 == 0 )
  89   2              {
  90   3                  if( sbtKey1_state == 0 )           //判断按键1是否按下
  91   3                  {
  92   4                      DelayMs( 10 );              //延时消除抖动
  93   4                      if( sbtKey1 == 0 )
  94   4                      {
  95   5                          uiToneNum++;            //声调改变
  96   5                          if( uiToneNum == 10 )
  97   5                              uiToneNum = 0;
  98   5                          TH0 = 0xF4 - uiToneNum; //减小重装值，从而减小
  99   5      //定时器中断（蜂鸣器振动）频率
 100   5                          sbtKey1_state = 1;      //设置按键1为已按下
 101   5                      }
 102   4                  }
 103   3              }
 104   2              else
 105   2                  sbtKey1_state = 0;
 106   2      
 107   2              if( sbtKey2 == 0 )
 108   2              {
 109   3                  if( sbtKey2_state == 0 )            //判断按键2是否按下 
 110   3                  {
 111   4                      DelayMs( 10 );               //延时消除抖动
 112   4                      if( sbtKey2 == 0 )
 113   4                      {
 114   5                          btBeepFlag = !btBeepFlag;   //蜂鸣器开关切换
 115   5                          sbtKey2_state = 1;          //设置按键1为已按下
 116   5                      }
 117   4                  }
C51 COMPILER V9.51   VARY_BEEP                                                             04/24/2019 09:27:17 PAGE 3   

 118   3              }
 119   2              else
 120   2                  sbtKey2_state = 0;
 121   2      
 122   2              DisplaySeg7Led();
 123   2          }
 124   1      }
 125          
 126          /*---------T0定时器中断服务处理函数--------*/
 127          void T0_Process() interrupt 1
 128          {
 129   1          if( btBeepFlag )
 130   1          {
 131   2              sbtBeep = ~sbtBeep;            //产生方波使得蜂鸣器发声
 132   2          }
 133   1          else
 134   1              sbtBeep = 0;                  //如果开关关闭,则蜂鸣器断电以保护蜂鸣器
 135   1      
 136   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    210    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     22    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
